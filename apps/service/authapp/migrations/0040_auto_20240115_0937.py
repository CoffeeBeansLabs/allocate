# Generated by Django 4.1.3 on 2024-01-15 09:37

from django.db import migrations


from django.db import migrations
from django.contrib.contenttypes.models import ContentType

from authapp.constants import RoleKeys
from authapp.permissions import assign_permissions, revoke_permissions



def get_group_permission_map(content_type):
    group_permission_map = {
        RoleKeys.SUPER_ADMIN: {
            'content_type': content_type,
            'codenames': ['add_inventory', 'view_inventory', 'change_inventory', 'delete_inventory']
        },
        RoleKeys.ADMIN: {
            'content_type': content_type,
            'codenames': ['add_inventory', 'view_inventory', 'change_inventory', 'delete_inventory']
        },
        RoleKeys.INVENTORY_MANAGER: {
            'content_type': content_type,
            'codenames': ['add_inventory', 'view_inventory', 'change_inventory', 'delete_inventory']
        }
    }
    return group_permission_map

def assign_group_permissions(apps, schema_editor):
    assets = apps.get_model('assets', 'Inventory')
    content_type = ContentType.objects.get_for_model(assets)
    group_permission_map = get_group_permission_map(content_type)
    assign_permissions(group_permission_map)


def revoke_group_permissions(apps, schema_editor):
    assets = apps.get_model('assets', 'Inventory')
    content_type = ContentType.objects.get_for_model(assets)
    group_permission_map = get_group_permission_map(content_type)
    revoke_permissions(group_permission_map)


class Migration(migrations.Migration):
    dependencies = [
        ("authapp", "0039_view_user_lwd_permission"),
    ]

    operations = [
        migrations.RunPython(assign_group_permissions, reverse_code=revoke_group_permissions)
    ]
